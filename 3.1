#include <stdio.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <unistd.h>
#include <ctype.h>

void get_permission_bits(char* permission, mode_t* permission_bits) {
    if (isdigit(permission[0])) {
        *permission_bits = strtol(permission, NULL, 8);
    } else {
        *permission_bits = 0;
        if (permission[0] == 'r') {
            *permission_bits |= S_IRUSR;
        }
        if (permission[1] == 'w') {
            *permission_bits |= S_IWUSR;
        }
        if (permission[2] == 'x') {
            *permission_bits |= S_IXUSR;
        }
    }
}

int main() {
    char permission_input[10];
    mode_t permission_bits;
    
    printf("1) Введите права доступа в буквенном или цифровом обозначении: ");
    scanf("%s", permission_input);
    get_permission_bits(permission_input, &permission_bits);
    printf("Битовое представление прав доступа: %o\n\n", permission_bits);

    char file_name[100];
    struct stat file_stat;
    
    printf("2) Введите имя файла: ");
    scanf("%s", file_name);
    stat(file_name, &file_stat);
    printf("Буквенное представление прав доступа: %o\n", file_stat.st_mode & 0777);
    printf("Цифровое представление прав доступа: %o\n", file_stat.st_mode & 0777);
    printf("Битовое представление прав доступа: %o\n\n", file_stat.st_mode & 0777);

    char modification[10];
    printf("3) Введите команду для модификации прав доступа (например, u+x): ");
    scanf("%s", modification);

    mode_t new_permission = file_stat.st_mode;
    if (modification[1] == '+') {
        get_permission_bits(&modification[2], &permission_bits);
        new_permission |= permission_bits;
    } else if (modification[1] == '-') {
        get_permission_bits(&modification[2], &permission_bits);
        new_permission &= ~permission_bits;
    }

    printf("Буквенное представление прав доступа после модификации: %o\n", new_permission & 0777);
    printf("Цифровое представление прав доступа после модификации: %o\n", new_permission & 0777);
    printf("Битовое представление прав доступа после модификации: %o\n", new_permission & 0777);

    return 0;
}

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <mqueue.h>

#define MAX_MSG_SIZE 256
#define QUEUE_NAME "/my_queue"

int main() {
mqd_t mq;
struct mq_attr attr;
char buffer[MAX_MSG_SIZE + 1];
int must_stop = 0;

attr.mq_flags = 0;
attr.mq_maxmsg = 10;
attr.mq_msgsize = MAX_MSG_SIZE;
attr.mq_curmsgs = 0;

mq = mq_open(QUEUE_NAME, O_CREAT | O_RDWR, 0644, &attr);
if (mq == (mqd_t)-1) {
perror("mq_open");
exit(1);
}

printf("Enter your name: ");
fgets(buffer, MAX_MSG_SIZE, stdin);

// Отправка имени в очередь
if (mq_send(mq, buffer, strlen(buffer) + 1, 0) == -1) {
perror("mq_send");
exit(1);
}

while (!must_stop) {
ssize_t bytes_read;

bytes_read = mq_receive(mq, buffer, MAX_MSG_SIZE, NULL);
if (bytes_read == -1) {
perror("mq_receive");
exit(1);
}

buffer[bytes_read] = '\0';
printf("Received message: %s", buffer);

if (strcmp(buffer, "exit\n") == 0) {
must_stop = 1;
}
printf("Enter your name: ");
fgets(buffer, MAX_MSG_SIZE, stdin);

// Отправка имени в очередь
if (mq_send(mq, buffer, strlen(buffer) + 1, 0) == -1) {
perror("mq_send");
exit(1);
}

printf("Enter a message to send (type 'exit' to quit):\n");

while (fgets(buffer, MAX_MSG_SIZE, stdin) != NULL) {
// Отправка сообщения в очередь
if (mq_send(mq, buffer, strlen(buffer) + 1, 0) == -1) {
perror("mq_send");
exit(1);
}

if (strcmp(buffer, "exit\n") == 0) {
break;
}

printf("Enter a message to send (type 'exit' to quit):\n");
}

}

// Закрытие очереди
if (mq_close(mq) == -1) {
perror("mq_close");
exit(1);
}

// Удаление очереди
if (mq_unlink(QUEUE_NAME) == -1) {
perror("mq_unlink");
exit(1);
}

return 0;
}
